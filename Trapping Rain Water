Q.Given an array arr[] of N non-negative integers representing the height of blocks.
If width of each block is 1, compute how much water can be trapped between the blocks during the rainy season.
logic and method code here..
class Solution{
    static long trappingWater(int arr[], int n) { 
        int LB[]=new int[n];
        LB[0]=arr[0];
        for(int i=1;i<n;i++){
            LB[i]=Math.max(LB[i-1],arr[i]);
        }
        int RB[]=new int[n];
        RB[n-1]=arr[n-1];
        for(int i=n-2;i>=0;i--){
            RB[i]=Math.max(RB[i+1],arr[i]);
        }
        long trappedWater=0;
        for(int i=0;i<n;i++){
            int waterlevel=Math.min(RB[i],LB[i]);
            trappedWater+=waterlevel-arr[i];
        }
        return trappedWater;
    } 
}
